FROM python:3.10-slim as builder

ARG HOME_DIR=/workspace
ENV MODEL_NAME resnet101

WORKDIR ${HOME_DIR}
COPY ./models/output_torch_model_file.py ${HOME_DIR}
COPY ./data ${HOME_DIR}/data

RUN apt-get -y update && \
    apt-get clean && \
    pip install --upgrade pip

ARG PYTORCH_URL=https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html 
RUN pip install --pre torch torchvision -f ${PYTORCH_URL} && \
    python -m output_torch_model_file


FROM pytorch/torchserve:0.5.3-cpu

ARG BUILDER_HOME=/workspace
ENV MODEL_NAME resnet101
ENV MODEL_SERVER_DIR /home/model-server
ENV MODEL_STORE_DIR ${MODEL_SERVER_DIR}/model-store

COPY --from=builder ${BUILDER_HOME}/${MODEL_NAME}.pt ${MODEL_SERVER_DIR}
COPY --from=builder ${BUILDER_HOME}/data ${MODEL_SERVER_DIR}/data

# USER root
# RUN printf "\nservice_envelope=json" >> ${MODEL_SERVER_DIR}/config.properties
USER model-server

RUN torch-model-archiver \
  --model-name=${MODEL_NAME} \
  --version=1.0 \
  --serialized-file=${MODEL_NAME}.pt \
  --extra-files=./data/resnet_labels.json \
  --handler=image_classifier \
  --export-path=${MODEL_STORE_DIR}

CMD ["torchserve", \
     "--start", \
     "--ncs", \
     "--model-store", "${MODEL_STORE_DIR}", \
     "--ts-config", "config.properties", \
     "--models", "${MODEL_NAME}=${MODEL_NAME}.mar"]
